// For bnd
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:4.1.0'
	}
}

plugins {
	id 'java'
	id 'maven-publish'
	id 'signing'
}

apply plugin: 'biz.aQute.bnd.builder'

group = 'se.mtm.addons'
sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
	main {	java { srcDir 'src' }	resources { srcDir 'src' } }
	test {	java { srcDir 'test' }	resources { srcDir 'test' } }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'


def repoRevision = System.getenv("REPO_REVISION")!=null?System.getenv("REPO_REVISION"):repositoryRevision

javadoc {
	options.encoding = 'UTF-8'
	options.source = 8
	options.links('https://docs.oracle.com/javase/8/docs/api/')
}

repositories {
	mavenCentral()
	mavenLocal()
	//maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url "https://oss.sonatype.org/content/groups/staging" }
}

dependencies {
	compileOnly 'org.osgi:org.osgi.service.component.annotations:1.3.0'
	compile 'org.daisy.streamline:streamline-api:1.5.0'
	compile 'org.daisy.dotify:dotify.common:4.4.0'
	compile (group: 'org.daisy.libs', name: 'saxon-he', version: '9.5.1.5') {
		exclude module: 'Saxon-HE'
	}
	testImplementation group: "junit", name: "junit", version: "4.12"
}

jar {
	manifest {
		attributes(
			'-sources': 'true',
			'Import-Package': 'org.daisy.streamline.api.tasks; provide:=true,'+
								'org.daisy.streamline.api.config; provide:=true, *',
			'Bundle-Name': "$bundleName",
			'Bundle-SymbolicName': "$bundleName",
			'Built-By': System.getProperty("user.name"),
			'Built-On': new Date().format('yyyy-MM-dd'),
			'Repository-Revision': "$repoRevision",
			'Repository-URL': "$repositoryURL",
			'Include-Resource': 'LICENSE, NOTICE'
		)
	}
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
	doLast {
		copy {
			from "src"
			include "**/doc-files/*.*"
			into new File(docsDir, "javadoc")
		}
	}
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
	required { isReleaseVersion }
	sign publishing.publications
}

publishing {
	//Only upload if a git hash is supplied. On Travis only upload snapshots.
	//enabled = repoRevision.size()==40 && System.getenv("TRAVIS_BUILD_ID")!=null
	publications {
		maven(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
			/*
			if (isReleaseVersion) {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			}*/
			pom {
				name = 'mtm-dotify-addons'
				packaging = 'jar'
				description = 'MTM Dotify Addons'
				url = "$repositoryURL"
				scm {
					connection = "$repositorySCM"
					developerConnection = "$repositorySCM"
					url = "$repositoryURL"
				}
				licenses {
					license {
						name = 'LGPL'
						url = 'http://www.gnu.org/licenses/lgpl.html'
					}
				}
				developers {
					developer {
						id = 'joel'
						name = 'Joel HÃ¥kansson'
					}
				}
			}
		}
	}
	repositories {
		maven {
			def stagingRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : stagingRepoUrl
			credentials {
				username = sonatypeUsername
				password = sonatypePassword
			}
		}
	}
}

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}